{"version":3,"sources":["../javascript.js"],"names":["getAllDOMElements","document","getElementsByTagName","getResumeDOMElement","page","children","getPageDOMElement","autoFontEnabled","resume","hasAttribute","contentIsGreaterThanPage","pageHeight","offsetHeight","resumeHeight","getFontSizeOfElement","style","window","getComputedStyle","element","getPropertyValue","parseFloat","calcNewFontSizes","elements","map","el","hasBoxShadow","getAbsolutePositionOfElement","top","getBoundingClientRect","left","getBorderRadiusOfElement","addNewBoxShadow","position","boxShadow","div","createElement","height","width","offsetWidth","borderRadius","webkitPrintColorAdjust","webkitFilter","appendChild","getElementsWithShadows","ar","slice","call","filter","shadow","fixBoxShadows","elementsWithShadow","forEach","isResume","checkFont","fixFont","elementsAr","newFontSizes","i","fontSize","isElectron","process","type","fixResume"],"mappings":"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","file":"javascript.js","sourcesContent":["/**\n * gets all DOM-elements on page\n * @return {HTMLElement[]} DOM-elements\n */\nconst getAllDOMElements = () => {\n    return document.getElementsByTagName('*');\n};\n\n/**\n * gets DOM-element of #resumeX\n * @param {HTMLElement} page\n * @return {HTMLElement}\n */\nconst getResumeDOMElement = page => {\n    return page.children[0];\n};\n\n/**\n * returns DOM-element of <page></page>\n * @return {HTMLElement}\n */\nconst getPageDOMElement = () => {\n    return document.getElementsByTagName('page')[0];\n};\n\n/**\n * checks whether auto-font adjustment is enabled for resume\n * @param  {HTMLElement} resume\n * @return {boolean}\n */\nconst autoFontEnabled = resume => {\n    return resume.hasAttribute('autofont');\n};\n\n/**\n * checks whether content is greater than page\n * @param  {HTMLElement} resume\n * @param  {HTMLElement} page\n * @return {boolean}        false if content fits to page\n */\nconst contentIsGreaterThanPage = (resume, page) => {\n    const pageHeight = page.offsetHeight;\n    const resumeHeight = resume.offsetHeight;\n    if (pageHeight < resumeHeight) return true;\n    else return false;\n};\n\n/**\n * gets font size of DOM-elemnt\n * @param  {HTMLElement} element\n * @return {number}         font size of element\n */\nconst getFontSizeOfElement = element => {\n    const style = window.getComputedStyle(element, null).getPropertyValue('font-size');\n    return parseFloat(style);\n};\n\n/**\n * calculates new font size of all DOM-elements\n * @param {HTMLElement[]}\n */\nconst calcNewFontSizes = elements => {\n    return elements\n        .map(el => getFontSizeOfElement(el) * 0.99);\n};\n\n\n/**\n * checks if DOM-element has box-shadow\n * @param  {HTMLElement}  element\n * @return {string} '' if no shadow, otherwise shadow e.g. 'rgba(0, 0, 0, 0.137255) 0px 2px 2px 0px'\n */\nconst hasBoxShadow = element => {\n    const style = window\n        .getComputedStyle(element, null)\n        .getPropertyValue('box-shadow');\n    if (style != 'none') return style;\n    else return '';\n};\n\n/**\n * gets absolute position of element\n * @param  {HTMLElement} element\n * @return {{}}\n */\nconst getAbsolutePositionOfElement = element => {\n    return {\n        top: element.getBoundingClientRect().top,\n        left: element.getBoundingClientRect().left\n    };\n};\n\n/**\n * gets border radius of element\n * @param  {HTMLElement} element\n * @return {string}         e.g. '50%'\n */\nconst getBorderRadiusOfElement = element => {\n    return window\n        .getComputedStyle(element, null)\n        .getPropertyValue('border-radius');\n};\n\n/**\n * adds new box shadow\n * @param {HTMLElement} element\n * @param {{}} position  e.g. { left: 10, top: 100}\n * @param {string} boxShadow e.g. 'rgba(0, 0, 0, 0.137255) 0px 2px 2px 0px'\n */\nconst addNewBoxShadow = (element, position, boxShadow) => {\n    let div = document.createElement('div');\n    div.style.height = element.offsetHeight;\n    div.style.width = element.offsetWidth;\n    div.style.borderRadius = getBorderRadiusOfElement(element);\n    div.style.position = 'absolute';\n    div.style.boxShadow = boxShadow;\n    div.style.webkitPrintColorAdjust = 'exact';\n    div.style.webkitFilter = 'opacity(1)';\n    div.style.top = position.top;\n    div.style.left = position.left;\n    document.getElementsByTagName('body')[0].appendChild(div);\n};\n\n/**\n * gets all elements with shadows\n * @param {HTMLElement[]} elements on page\n * @return {HTMLElement[]} elements with shadows\n */\nconst getElementsWithShadows = elements => {\n    const ar = [].slice.call(elements);\n    return ar\n        .filter(el => hasBoxShadow(el) != '')\n        .map(el => {\n            return {\n                element: el,\n                shadow: hasBoxShadow(el)\n            };\n        });\n};\n\n/**\n * fixes shadows, since normal box-shadow cannot be printed in chrome,\n * see: http://stackoverflow.com/questions/13975198/text-shadow-and-box-shadow-while-printing-chrome\n */\nconst fixBoxShadows = () => {\n    const elements = getAllDOMElements();\n    const elementsWithShadow = getElementsWithShadows(elements);\n    elementsWithShadow.forEach(element => {\n        const position = getAbsolutePositionOfElement(element.element);\n        element.element.style.boxShadow = 'none';\n        addNewBoxShadow(element.element, position, element.shadow);\n    });\n};\n\n/**\n * checks if the page contains a resume\n * @return {Boolean} true if page contains resume\n */\nconst isResume = () => {\n    if (document.getElementsByTagName('page')[0]) return true;\n    else return false;\n};\n\n/**\n * checks whether font needs to be fixed, and if fixes it\n */\nconst checkFont = () => {\n    const page = getPageDOMElement();\n    const resume = getResumeDOMElement(page);\n    const fixFont = function(resume, page) {\n        const elements = getAllDOMElements();\n        const elementsAr = [].slice.call(elements);\n        const newFontSizes = calcNewFontSizes(elementsAr);\n        elementsAr.forEach((el, i) => el.style.fontSize = newFontSizes[i] + 'px');\n        if (contentIsGreaterThanPage(resume, page)) fixFont(resume, page);\n    };\n    if (\n        autoFontEnabled(resume) &&\n        contentIsGreaterThanPage(resume, page)\n    ) fixFont(resume, page);\n};\n\nconst isElectron = () => {\n    return window && window.process && window.process.type;\n}\n\n/**\n * fixes resume\n */\nconst fixResume = () => {\n    if (!isResume()) return;\n    checkFont();\n    if (isElectron()) fixBoxShadows();\n};\n\nfixResume();\n"]}